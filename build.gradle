repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.60")
    }
}

ext {
    serenityVersion = '2.0.64'
    serenityCucumberVersion = '1.9.43'
}
compileJava {
    options*.encoding = 'UTF-8'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileTestJava {
    options*.encoding = 'UTF-8'
}

wrapper {
    gradleVersion = '4.10.3'
}

group 'retoTecnicoChoucair'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    implementation(group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '6.1.0.jre8')
    implementation(group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.12.0')
    implementation(group: 'log4j', name: 'log4j', version: '1.2.17')
    implementation(group: 'com.pusher', name: 'pusher-java-client', version: '1.8.2')
    implementation(group: 'com.sun.jersey', name: 'jersey-client', version: '1.9.1')
    implementation group: 'io.cucumber', name: 'cucumber-junit', version: '2.0.0'
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '2.0.0'
    implementation group: 'io.cucumber', name: 'cucumber-core', version: '2.0.0'
    implementation(group: 'org.apache.commons', name: 'commons-lang3', version: '3.8')
    implementation(group: 'com.github.javafaker', name: 'javafaker', version: '0.15')
    implementation(group: 'com.google.code.gson', name: 'gson', version: '2.8.0')
    implementation(group: 'com.sun.mail', name: 'javax.mail', version: '1.6.0')
    implementation(group: 'org.jsoup', name: 'jsoup', version: '1.11.3')
    implementation(group: 'org.postgresql', name: 'postgresql', version: '42.2.5.jre7')
    implementation(group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.8')
    implementation(group: 'org.json', name: 'json', version: '20190722')
    implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.10.2'
    //implementation(group: 'com.oracle', name: 'ojdbc8', version: '12.2.0.1')
    implementation (group: 'net.serenity-bdd', name: 'serenity-core', version: '3.2.1')
    implementation (group: 'net.serenity-bdd', name: 'serenity-junit', version: '3.2.1')
    implementation (group: 'net.serenity-bdd', name: 'serenity-cucumber', version: '3.2.0')
    implementation (group: 'net.serenity-bdd', name: 'serenity-screenplay', version: '3.2.1')
    implementation (group: 'net.serenity-bdd', name: 'serenity-screenplay-webdriver', version: '3.2.1')


}


javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}


test {
    useJUnitPlatform()
}

test
        {
            systemProperty "cucumber.options", System.getProperty("cucumber.options")
            String tiporegresion = System.properties['Tiporegresion']
            println "Tipo de regresion recibido por parametro: " + tiporegresion
            systemProperty "Tiporegresion", tiporegresion


            switch (tiporegresion) {

                case "@FUNCIONALFRONT":
                    useJUnit()
                    include('**/TestRunnerRetoPracticoFRONT*')

                    maxParallelForks = 2
                    reports.junitXml.setEnabled(false)
                    reports.html.setEnabled(false)
                    break
                case "@PREPARACIONRERUN":
                    useJUnit()
                    include('**/TestRunnerRetoPracticoFRONT*')
                    maxParallelForks = 1
                    reports.junitXml.setEnabled(false)
                    reports.html.setEnabled(false)
                    break
                case "@RERUNFUN":
                    useJUnit()
                    include('**/TestRunnerRetoPracticoFRONT*')
                    maxParallelForks = 1
                    reports.junitXml.setEnabled(false)
                    reports.html.setEnabled(false)
                    break
                default:
                    useJUnit()
                    include('**/TestRunnerRetoPracticoFRONT*')
                    maxParallelForks = 1
                    reports.junitXml.setEnabled(false)
                    reports.html.setEnabled(false)
                    break
            }

        }